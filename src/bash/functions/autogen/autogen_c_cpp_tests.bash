#
# For the copyright information for this file, please search up the
# directory tree for the first COPYING file.
#

#
# autogen_c_cpp_tests <dir> <lib>...
#

if [[ "$(type -t \
autogen_c_cpp_tests)" != function ]]; then
autogen_c_cpp_tests() {

  local dir
  local libs
  local x1
  local x2
  local x3

  case $# in
    0 | 1)
      barf 'invalid argument count: %d' $#
    ;;
  esac

  dir=$1
  readonly dir
  shift

  libs=$@
  readonly libs

  for x1 in \
    $dir/**/*.c \
    $dir/**/*.cpp \
  ; do

    expect_safe_path "$x1"

    x2=$(echo $x1 | sed 's/\.[^.]*$//')
    x3=$(echo $x2 | sed 's/[^A-Za-z0-9_]/_/g')

    cat >$x2.gitignorable.am <<EOF
##
## For the copyright information for this file, please search up the
## directory tree for the first COPYING file.
##

##
## This file was generated by ./autogen.
##

## begin_variables

TESTS += $x2

check_PROGRAMS += $x2

${x3}_CFLAGS = \\
  \$(AM_CFLAGS) \\
  \$(EXE_CFLAGS) \\
\$(prevent_a_blank_line)

${x3}_CPPFLAGS = \\
  \$(AM_CPPFLAGS) \\
  -I $dir \\
  -I \$(srcdir)/$dir \\
\$(prevent_a_blank_line)

${x3}_CXXFLAGS = \\
  \$(AM_CXXFLAGS) \\
  \$(EXE_CXXFLAGS) \\
\$(prevent_a_blank_line)

${x3}_LDADD = $libs

${x3}_LDFLAGS = \\
  \$(AM_LDFLAGS) \\
  \$(EXE_LDFLAGS) \\
\$(prevent_a_blank_line)

${x3}_SOURCES = $x1

## end_variables
EOF

    autogen_am_include $x2.gitignorable.am

  done

}; readonly -f autogen_c_cpp_tests; fi
